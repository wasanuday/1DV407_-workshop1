Austin Ponten, Hatem Houssein, Alex Spottka date: 9/16/15


Objektorienterad analys och design med UML

Peer Review: Abeer Alkhars, Wasan Mahmoud

As a developer would the model help you and why/why not?

Yes. The model is a good representation of how someone (as a programmer), would like to see the

individual attributes and characteristics required in a class diagram. The design was more orientated

towards how a software developer thinks and less towards what a map maker thinks [1, p.223 9.2

Do you think a domain expert (for example the Secretary) would understand the model why/why not?

No. A domain model should cover the main points of a system, not have “Roles” and “YachtClubLogin” as

conceptual classes [1, p.224 9.2]. The domain expert would be overwhelmed by the amount of methods

and attributes in each conceptual class [1, p.224 Figure9.4].

What are the strong points of the model, what do you think is really good and why?

For the most part, the associations made between each of the conceptual classes were correctly labeled

and logically followed.

Another positive factor was that the model was static and did not have any dynamic modules.

What are the weaknesses of the model, what do you think should be changed and why?

The concept of a domain model was misunderstood. The design seems to be orientated more towards

software development and not as a map for every person in the company to read and interpret correctly

[1, p.223 9.2]. Another issue with the design is that it has “Roles” and “YachtClubLogin” as conceptual

classes whereas “A domain model is a visual representation of conceptual classes or real-situation objects

in a domain” [1, p.223 9.2]. Therefore “Roles” and “YachtClubLogin” are not conceptual classes, but are

better defined as the blank sheet in which you put the actual roles on to, explaining how the system will

work [1, p.224 9.3]. Lastly the amounts of attributes used were unnecessary and divulged on topics only

related to the development process. An overall simplification for each conceptual class and attributes

would allow every user to read and understand the overall model better.

Do you think the model has passed the grade 2 (passing grade) criteria?

First of all, this model was submitted without any (required) description, which made the model even

more difficult to understand.

Second, the concept of what a Domain model is was not completely understood due to the fact that the

design looks more like a detailed class diagram than a domain model “In a conceptual perspective the

class diagram can be used to visualize a domain model” [1, p.382 16.2]. This means that you can derive

the class diagram from an existing domain model, but a class diagram, (which the design pertains to be),

is not representative of a domain model.

Reference list

1. Craig Larman, Applying UML and Patterns 3rd Ed, 2004, ISBN: 0-13-148906-2